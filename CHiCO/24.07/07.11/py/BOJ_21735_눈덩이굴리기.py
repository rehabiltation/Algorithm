# 문제

"""
눈송이들이 많은 동네인 숙명여대 앞마당에서 눈사람 만들기 대회를 연다. 앞마당의 길이는 
$N$이고 위치 
$1$부터 위치 
$N$ 까지만 눈이 쌓여있다. 위치 
$i$에 눈이 
$a_i$만큼 쌓여있다. 대회 규칙은 해당 앞마당에서 
$M$초 동안 눈덩이를 굴려 눈사람을 만드는 것이다. 눈덩이의 시작 크기는 
$1$이다. 눈덩이의 시작 위치는 
$0$이다.

가장 큰 눈사람을 만들고 싶던 수수는 눈덩이를 굴리는 법을 연구했다. 눈덩이를 굴리는 방법에는 두 가지가 있다. 눈덩이를 굴리거나 던질 때 1초가 소모된다.

눈덩이를 현재 위치 +1칸으로 굴린다. 현재 칸의 위치를 
$i$라고 하면 눈덩이의 크기는 
$a_{i+1}$ 만큼 늘어난다.
눈덩이를 현재 위치 +2칸으로 던진다. 눈덩이가 착지하며 충격을 받아 눈덩이의 크기는 원래의 크기의 반으로 줄어들고  현재 칸의 위치를 
$i$라고 하면 눈덩이의 크기는 
$a_{i+2}$ 만큼 늘어난다. 이 때 소수점은 절사한다. 눈덩이를 던져 크기가 
$0$이 되어도 눈덩이는 사라지지 않는다.
눈덩이가 앞마당의 끝에 도달한 경우 남은 시간과 관계없이 눈덩이 굴리기는 끝이 난다. 대회 시간 내에 가장 크게 만들 수 있는 눈덩이의 크기를 구하는 프로그램을 작성해보자.
"""

# 입력

"""
첫째 줄에 공백을 기준으로 앞마당의 길이 
$N$ (
$1 \leq N \leq 100$), 대회의 시간 
$M$ (
$1 \leq M \leq 10$)이 주어진다.

둘째 줄에 길이가 
$N$인 수열 
$a$가 주어진다. (
$1 \leq a_i \leq 1\,000\,000$)
"""

# 출력

# 첫째 줄에 대회 시간 내에 가장 크게 만들 수 있는 눈덩이의 크기를 출력한다.

# 정답

N, M = map(int, input().split())
arr = list(map(int, input().split()))

DP = [[0] * (N + 1) for _ in range(M + 1)]
DP[0][0] = 1

for i in range(M):
    for j in range(N):
        if DP[i][j] > 0:
            if j + 1 <= N:
                DP[i + 1][j + 1] = max(DP[i + 1][j + 1], DP[i][j] + arr[j])
            if j + 2 <= N:
                DP[i + 1][j + 2] = max(DP[i + 1][j + 2], DP[i][j] // 2 + arr[j + 1])

max_size = 0
for i in range(M + 1):
    for j in range(N + 1):
        max_size = max(max_size, DP[i][j])

print(max_size)
